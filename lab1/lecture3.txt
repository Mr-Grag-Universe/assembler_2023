Беззнаковое умножение:
mul op (нет непосредственной адресации)
al * op –> ax
ax * op –> dx:ax
eax * op –> edx:eax
rax * op -> rdx:rax

Знаковое умножение:
imul op (нет непосредственной адресации)
al * op –> ax
ax * op –> dx:ax
eax * op –> edx:eax
rax * op -> rdx:rax

Знаковое умножение:
imul op1, op2 (только второй операнд может быть ячейкой памяти)
imul op1, op2, op3 (только op2 может быть ячейкой памяти, op2 – не может быть непосредственным операндом, op3 – непосредственный операнд)

Знаковое деление:
idiv op

Беззнаковое деление:
div op

Деление (знаковое и беззнаковое):
ax / op –> al, остаток в ah
dx:ax / op –> ax, остаток в dx
edx:eax / op –> eax, остаток в edx
rdx:rax / op –> rax, остаток в rdx

Логическое «И»:
and op1, op2
Логическое «ИЛИ»:
or op1, op2
Логическое исключающее «ИЛИ»:
хor op1, op2
Инверсия:
not op

Влияние логических команд на флаги.
Флаги CF и OF сбрасываются, а SF, ZF и PF устанавливаются в соответствии с результатом. AF не определен. Команда not на флаги не влияет.

Арифметические сдвиги:
sar/sal op1, op2
Логические сдвиги:
shr/shl op1, op2
(op2 – непосредственный операнд или cl)
CF содержит выдвигаемый бит
OF определен только при сдвиге на 1

Циклические сдвиги:
ror/rol op1, op2
Циклические сдвиги через CF:
rcr/rcl op1, op2
(op2 – непосредственный операнд или cl)
CF содержит выдвигаемый бит
OF определен только при сдвиге на 1

Сдвиги повышенной точности:
shrd/shld op1, op2, op3
(только op1 может быть ячейкой памяти, op3 – непосредственный операнд или cl)
CF содержит выдвигаемый бит
OF определен только при сдвиге на 1

Проверка бита:
bt op1, op2
op1 – обычный операнд (битовая база)
op2 – число не больше 16|32|64 или регистр (битовое смещение)
Указанный бит считывается в CF.

Проверка и модификация бита:
bts op1, op2 – установка бита
btr op1, op2 – сброс бита
btc op1, op2 – инверсия бита
op1 – битовая база
op2 – битовое смещение
Старое значение бита считывается в CF.

Поиск первой единицы в битовой строке:
bsf op1, op2 – поиск с младшего бита
bsr op1, op2 – поиск со старшего бита
op1 – регистр (номер бита)
op2 – обычный операнд
Если операнд равен нулю, то результат не определен и ZF устанавливается.

Метки:
m1: add ax, bx
m2: sub bl, dl

Безусловный переход:
jmp met1

Условный переход:
jcc метка

Арифметическое сравнение:
cmp op1, op2
(Фактически sub op1, op2, но результат никуда не записывается).
Логическое сравнение:
test op1, op2
(Фактически and op1, op2, но результат никуда не записывается).

Установить флаг переноса:
stc
Сбросить флаг переноса:
clc
Инвертировать флаг переноса:
cmc

